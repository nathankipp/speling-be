{"version":3,"sources":["1g-words.js","App.js","reportWebVitals.js","index.js"],"names":["a","split","map","w","trim","initialState","step","score","word","undefined","choices","ans","high","spelled","getWord","unspelled","difference","words","idx","Math","floor","random","length","AZ","scoreBoard","className","App","props","state","window","localStorage","getItem","setItem","JSON","parse","x","e","this","setState","prevState","uniq","letter","includes","push","char","guess","concat","setTimeout","stringify","start","replace","countdown","spell","console","log","bind","onClick","read","print","remove","giveUp","sort","yes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.238a9e72.chunk.js","sourcesContent":["const words = `\nthe,like,has,came,all,been,\ncan,go,put,gave,down,because,\nto,look,into,make,food,before,\nam,you,fast,time,good,friend,\nhave,here,back,something,house,one,\nit,see,jump,give,how,little,\nat,my,just,come,new,could,\ndo,on,off,what,night,too,\nand,going,pick,walk,now,two,\nbig,they,stop,boy,or,does,\nin,but,that,eat,our,are,\nnot,did,them,play,out,car,\nsaid,fun,then,rain,saw,girl,\nfrom,got,this,road,says,her,\nis,had,went,teach,school,there,\nget,him,when,old,brother,were,\nof,if,will,over,children,very,\nup,run,with,canâ€™t,father,where,\nfor,tell,want,don't,mother,who,\nhe,us,was,I'm,sister,why`;\n\nconst a = words.split(',').map(w => w.trim());\nexport default a;\n","import React from 'react';\nimport uniq from  'lodash/uniq';\nimport difference from 'lodash/difference';\nimport './App.css';\nimport words from './1g-words';\n\nconst initialState = {\n  step: 0,\n  score: 0,\n  word: undefined,\n  choices: [],\n  ans: '',\n  high: null,\n  spelled: [],\n};\n\nconst getWord = (spelled = []) => {\n  const unspelled = difference(words, spelled);\n  const idx = Math.floor(Math.random() * unspelled.length);\n  return unspelled[idx];\n}\nconst AZ = 'abcdefghijklmnopqrstuvqxyz'.split('');\n\nconst scoreBoard = (score, high) => (\n  <div className=\"score\">\n    <div>Score: {score}</div>\n    {high > 0 ? <div>High: {high}</div> : null}\n  </div>\n);\n\nconst start = (state, start) => (\n  <div className=\"app go\">\n    {scoreBoard(state.score, state.high)}\n    <div>\n      Get ready to spell!\n      <div className=\"status\">{difference(words, state.spelled).length} of {words.length} words left to solve</div>\n    </div>\n    <div><button className=\"go\" onClick={start}>Go</button></div>\n  </div>\n);\n\nconst read = (state) => {\n  const { score, high, word, countdown } = state;\n  return (\n    <div className=\"app read\">\n      {scoreBoard(score, high)}\n      <div>{word}</div>\n      <div>{countdown}</div>\n    </div>\n  );\n};\n\nconst spell = (state, print, remove, giveUp) => {\n  const { score, high, choices, ans } = state;\n  return (\n    <div className=\"app spell\">\n      {scoreBoard(score, high)}\n      <div>&nbsp;{ans}&nbsp;</div>\n      <div>\n        {choices.sort().map(letter => (\n          <button key={letter} onClick={() => print(letter)}>{letter}</button>\n        ))}\n        <button className=\"remove\" onClick={remove}> &lt; </button>\n        <button className=\"give-up\" onClick={giveUp}> ? </button>\n      </div>\n    </div>\n  );\n};\n\nconst yes = (state) => {\n  const { score, high, ans } = state;\n  return (\n    <div className=\"app yes\">\n      {scoreBoard(score, high)}\n      <div>{ans}</div>\n      <div>Yes!!!</div>\n    </div>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const high = window.localStorage?.getItem('speling-be') || 0;\n    if (high === null) {\n      window.localStorage.setItem('speling-be', 0);\n    }\n\n    let spelled = window.localStorage?.getItem('spelled');\n    try {\n      spelled = JSON.parse(spelled).map(x => x);\n    } catch(e) {\n      spelled = [];\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      high,\n      spelled,\n    }));\n  }\n\n  spell() {\n    const { word } = this.state;\n    const choices = uniq(word.split(''));\n    while (choices.length < 15) {\n      const idx = Math.floor(Math.random() * 26);\n      const letter = AZ[idx];\n      if (!choices.includes(letter)) {\n        choices.push(letter);\n      }\n    }\n\n    this.setState(prevState => ({\n      ...this.state,\n      step: 2,\n      choices,\n    }));\n  }\n\n  print(char) {\n    const guess = this.state.ans.concat(char);\n    const step = guess === this.state.word ? 3 : 2;\n\n    if (step === 3) {\n      setTimeout(() => {\n        this.setState(\n          prevState => {\n            const score = prevState.score + 1;\n            const high = score > prevState.high ? score : prevState.high;\n            const spelled = [...prevState.spelled, prevState.word];\n            window.localStorage.setItem('speling-be', high);\n            window.localStorage.setItem('spelled', JSON.stringify(spelled));\n            return {\n              ...prevState,\n              score,\n              high,\n              spelled,\n            };\n          },\n          () => this.start());\n      }, 2000);\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      ans: guess,\n      step,\n    }));\n  }\n\n  remove() {\n    this.setState(prevState => ({\n      ...prevState,\n      ans: this.state.ans.replace(/.$/, ''),\n    }));\n  }\n\n  giveUp() {\n    this.setState(prevState => ({\n      ...initialState,\n      score: 0,\n      high: prevState.high,\n      spelled: prevState.spelled,\n    }));\n  }\n\n  start() {\n    this.setState(prevState => ({\n      ...prevState,\n      step: 1,\n      word: getWord(prevState.spelled),\n      ans: '',\n      countdown: 3\n    }));\n    setTimeout(() => this.setState(prevState => ({ ...prevState, countdown: 2 })), 1000);\n    setTimeout(() => this.setState(prevState => ({ ...prevState, countdown: 1 })), 2000);\n    setTimeout(() => this.spell(), 3000);\n  }\n\n  render() {\n    console.log(this.state.spelled);\n    switch(this.state.step) {\n      case 0: return start(this.state, this.start.bind(this));\n      case 1: return read(this.state);\n      case 2: return spell(this.state, this.print.bind(this), this.remove.bind(this), this.giveUp.bind(this));\n      case 3: return yes(this.state);\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}