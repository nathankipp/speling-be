{"version":3,"sources":["1g-words.js","App.js","reportWebVitals.js","index.js"],"names":["a","split","map","w","trim","initialState","score","step","word","undefined","choices","ans","getWord","idx","Math","floor","random","words","length","AZ","scoreBoard","className","App","props","state","this","uniq","letter","includes","push","setState","prevState","char","guess","concat","setTimeout","replace","next","Fragment","onClick","read","bind","print","remove","giveUp","sort","spell","yes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0682debc.chunk.js","sourcesContent":["const words = `\nthe,like,has,came,all,been,\ncan,go,put,gave,down,because,\nto,look,into,make,food,before,\nam,you,fast,time,good,friend,\nhave,here,back,something,house,one,\nit,see,jump,give,how,little,\nat,my,just,come,new,could,\ndo,on,off,what,night,too,\nand,going,pick,walk,now,two,\nbig,they,stop,boy,or,does,\nin,but,that,eat,our,are,\nnot,did,them,play,out,car,\nsaid,fun,then,rain,saw,girl,\nfrom,got,this,road,says,her,\nis,had,went,teach,school,there,\nget,him,when,old,brother,were,\nof,if,will,over,children,very,\nup,run,with,canâ€™t,father,where,\nfor,tell,want,don't,mother,who,\nhe,us,was,I'm,sister,why`;\n\nconst a = words.split(',').map(w => w.trim());\nexport default a;\n","import React from 'react';\nimport uniq from  'lodash/uniq';\nimport './App.css';\nimport words from './1g-words';\n\nconst initialState = {\n  score: 0,\n  step: 1,\n  word: undefined,\n  choices: [],\n  ans: '',\n};\n\nconst getWord = () => {\n  const idx = Math.floor(Math.random() * words.length);\n  return words[idx];\n}\nconst AZ = 'abcdefghijklmnopqrstuvqxyz'.split('');\n\nconst scoreBoard = score => <div className=\"score\">Score: {score}</div>;\n\nconst read = (state, next) => {\n  const { score, word } = state;\n  return (\n    <React.Fragment>\n      {scoreBoard(score)}\n      <div className=\"read\">\n        <div>{word}</div>\n        <button onClick={next}>Spell It!</button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst spell = (state, print, remove, giveUp) => {\n  const { score, choices, ans } = state;\n  return (\n    <React.Fragment>\n    {scoreBoard(score)}\n    <div className=\"spell\">\n      <div>&nbsp;{ans}&nbsp;</div>\n      <div>\n        {choices.sort().map(letter => (\n          <button key={letter} onClick={() => print(letter)}>{letter}</button>\n        ))}\n      </div>\n      <div>\n        <button className=\"remove\" onClick={remove}> &lt; </button>\n        <button className=\"give-up\" onClick={giveUp}> ? </button>\n      </div>\n    </div>\n    </React.Fragment>\n  );\n};\n\nconst yes = (state) => {\n  const { score, ans } = state;\n  return (\n    <React.Fragment>\n    {scoreBoard(score)}\n    <div className=\"yes\">\n      <div>&nbsp;{ans}&nbsp;</div>\n    </div>\n    </React.Fragment>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  next(step) {\n    const { word } = this.state;\n    const choices = uniq(word.split(''));\n    while (choices.length < 12) {\n      const idx = Math.floor(Math.random() * 26);\n      const letter = AZ[idx];\n      if (!choices.includes(letter)) {\n        choices.push(letter);\n      }\n    }\n\n    this.setState(prevState => ({\n      ...this.state,\n      choices,\n      step: prevState.step + 1,\n    }));\n  }\n\n  print(char) {\n    const guess = this.state.ans.concat(char);\n    const step = guess === this.state.word ? 3 : 2;\n\n    this.setState({\n      ...this.state,\n      ans: guess,\n      step,\n    });\n\n    if (step === 3) {\n      setTimeout(() => this.setState({\n        ...this.state,\n        score: this.state.score + 1,\n        step: 1,\n        word: getWord(),\n        ans: ''\n      }), 2000);\n    }\n  }\n\n  remove() {\n    this.setState({\n      ...this.state,\n      ans: this.state.ans.replace(/.$/, ''),\n    });\n  }\n\n  giveUp() {\n    this.setState({\n      ...initialState,\n      word: getWord(),\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      word: getWord(),\n    });\n  }\n\n  render() {\n    switch(this.state.step) {\n      case 1: return read(this.state, this.next.bind(this));\n      case 2: return spell(this.state, this.print.bind(this), this.remove.bind(this), this.giveUp.bind(this));\n      case 3: return yes(this.state);\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}