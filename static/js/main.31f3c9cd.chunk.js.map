{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["words","AZ","split","STORAGE_KEYS","INITIAL_STATE","step","score","word","undefined","choices","ans","high","mode","spelled","spoken","reset","window","confirm","localStorage","setItem","location","reload","getWord","completed","remainingWords","difference","length","idx","Math","floor","random","scoreBoard","className","App","props","spell","state","uniq","letter","includes","push","update","print","char","guess","concat","JSON","stringify","setTimeout","start","remove","replace","giveUp","speak","newState","countdown","cb","audioRef","React","createRef","this","setState","prevState","getItem","parse","map","x","e","onClick","read","ref","src","process","autoPlay","sort","current","currentTime","play","yes","done","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.31f3c9cd.chunk.js","sourcesContent":["import React from 'react';\nimport uniq from  'lodash/uniq';\nimport difference from 'lodash/difference';\nimport './App.css';\n// import words from './1g-words';\nconst words = ['all', 'am'];\nconst AZ = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nconst STORAGE_KEYS = {\n  high: 'speling-be',\n  spelled: 'spelled',\n  spoken: 'spoken',\n};\n\nconst INITIAL_STATE = {\n  step: 0,\n  score: 0,\n  word: undefined,\n  choices: [],\n  ans: '',\n  high: 0,\n  mode: STORAGE_KEYS.spelled,\n  spelled: [],\n  spoken: [],\n};\n\nconst reset = () => {\n  if (window.confirm(\"Reset words and high score?\")) {\n    window.localStorage.setItem(STORAGE_KEYS.high, 0);\n    window.localStorage.setItem(STORAGE_KEYS.spelled, '[]');\n    window.localStorage.setItem(STORAGE_KEYS.spoken, '[]');\n    window.location.reload();\n  }\n};\n\nconst getWord = (completed = []) => {\n  const remainingWords = difference(words, completed);\n  if (remainingWords.length === 0) {\n    return '';\n  }\n  const idx = Math.floor(Math.random() * remainingWords.length);\n  return remainingWords[idx];\n}\n\nconst scoreBoard = (score, high) => (\n  <div className=\"score\">\n    <div>Score: {score}</div>\n    <div>High: {high}</div>\n  </div>\n);\n\nconst getViews = (state) => ({\n  start: (start) => {\n    const { score, high, spelled, spoken } = state;\n    return (\n      <div className=\"app go\">\n        {scoreBoard(score, high)}\n        <div>\n          <div>Get ready to spell!</div>\n          <div className=\"status\">There are {words.length} words</div>\n          <div className=\"status\">\n            {difference(words, spelled).length} left to read & spell\n          </div>\n          <div className=\"status\">\n            {difference(words, spoken).length} left to hear & spell\n          </div>\n          <button className=\"reset\" onClick={() => reset()}>Reset</button>\n        </div>\n        <div><button className=\"go\" onClick={start}>Go</button></div>\n      </div>\n    );\n  },\n  read: () => {\n    const { score, high, word, countdown } = state;\n    return (\n      <div className=\"app read\">\n        {scoreBoard(score, high)}\n        <div>{word}</div>\n        <div>{countdown}</div>\n      </div>\n    );\n  },\n  spell: (audioRef, print, remove, giveUp) => {\n    const { word, mode, score, high, choices, ans } = state;\n    return (\n      <div className=\"app spell\">\n        <audio ref={audioRef} src={`${process.env.PUBLIC_URL}/audio/${word}.m4a`} autoPlay={mode === STORAGE_KEYS.spoken} />\n        {scoreBoard(score, high)}\n        <div>&nbsp;{ans}&nbsp;</div>\n        <div>\n          {choices.sort().map(letter => (\n            <button key={letter} onClick={() => print(letter)}>{letter}</button>\n          ))}\n          <button className=\"remove\" onClick={remove}> &larr; </button>\n          <button onClick={() => {\n            audioRef.current.currentTime = 0;\n            audioRef.current.play();\n          }}> &#129300; </button>\n          <button className=\"give-up\" onClick={() => {\n            if (window.confirm(\"Give up?\")) { giveUp(); }\n          }}> &#128534; </button>\n        </div>\n      </div>\n    );\n  },\n  yes: () => {\n    const { score, high, ans } = state;\n    return (\n      <div className=\"app yes\">\n        {scoreBoard(score, high)}\n        <div>{ans}</div>\n        <div>Yes!!!</div>\n      </div>\n    )\n  },\n  done: () => {\n    const { score, high } = state;\n    return (\n      <div className=\"app winner\">\n        {scoreBoard(score, high)}\n        <div>&#129321;</div>\n        <div>All done!</div>\n        <button className=\"reset\" onClick={() => reset()}>Play again</button>\n      </div>\n    );\n  },\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n    this.audioRef = React.createRef();\n  }\n\n  update(newState, cb = () => {}) {\n    this.setState(prevState => ({\n      ...prevState,\n      ...newState,\n    }), cb);\n  }\n\n  componentDidMount() {\n    const high = window.localStorage?.getItem(STORAGE_KEYS.high) || 0;\n    if (high === null) {\n      window.localStorage.setItem(STORAGE_KEYS.high, 0);\n    }\n\n    let spelled = window.localStorage?.getItem(STORAGE_KEYS.spelled);\n    try {\n      spelled = JSON.parse(spelled).map(x => x);\n    } catch(e) {\n      spelled = [];\n    }\n\n    let spoken = window.localStorage?.getItem(STORAGE_KEYS.spoken);\n    try {\n      spoken = JSON.parse(spelled).map(x => x);\n    } catch(e) {\n      spoken = [];\n    }\n\n    const step = difference(words, uniq([...spelled, ...spoken])).length === 0\n      ? 4 // winner\n      : INITIAL_STATE.step;\n\n    this.update({ step, high, spelled, spoken });\n  }\n\n  spell = () => {\n    const { word } = this.state;\n    const choices = uniq(word.split(''));\n    while (choices.length < 15) {\n      const idx = Math.floor(Math.random() * 26);\n      const letter = AZ[idx];\n      if (!choices.includes(letter)) {\n        choices.push(letter);\n      }\n    }\n\n    this.update({ step: 2, choices });\n  }\n\n  print = (char) => {\n    let { ans, word, score, high, mode, spelled, spoken } = this.state;\n    const guess = ans.concat(char);\n    const step = guess === word ? 3 : 2;\n\n    if (step === 3) {\n      score = score + 1;\n      high = score > high ? score : high;\n      window.localStorage.setItem(STORAGE_KEYS.high, high);\n\n      if (mode === STORAGE_KEYS.spelled) {\n        spelled = [...spelled, word];\n        window.localStorage.setItem(STORAGE_KEYS.spelled, JSON.stringify(spelled));\n      } else {\n        spoken = [...spoken, word];\n        window.localStorage.setItem(STORAGE_KEYS.spoken, JSON.stringify(spoken));\n      }\n\n      const update = () => this.update(\n        { score, high, spelled, spoken },\n        () => this.start()\n      );\n      setTimeout(update, 2000);\n    }\n\n    this.update({ ans: guess, step });\n  }\n\n  remove = () => {\n    const { ans } = this.state;\n    this.update({ ans: ans.replace(/.$/, '') });\n  }\n\n  giveUp = () => {\n    const { high, spelled } = this.state;\n    this.update({ ...INITIAL_STATE, score: 0, high, spelled });\n  }\n\n  start = () => {\n    const { spelled, spoken } = this.state;\n\n    const spell = getWord(spelled);\n    const speak = getWord(spoken);\n    const step = spell ? 1 : speak ? 2 : 4;\n    const newState = {\n      step,\n      mode: spell ? STORAGE_KEYS.spelled : STORAGE_KEYS.spoken,\n      word: spell || speak,\n      ans: '',\n      countdown: 3\n    }\n\n    const cb = spell\n        ? () => {\n          setTimeout(() => this.update({ countdown: 2 }), 1000);\n          setTimeout(() => this.update({ countdown: 1 }), 2000);\n          setTimeout(() => this.spell(), 3000);\n        }\n        : () => this.spell();\n    this.update(newState, step < 4 ? cb : undefined);\n  }\n\n  render() {\n    const { start, read, spell, yes, done } = getViews(this.state);\n    switch(this.state.step) {\n      case 0: return start(this.start);\n      case 1: return read();\n      case 2: return spell(this.audioRef, this.print, this.remove, this.giveUp);\n      case 3: return yes();\n      case 4: return done();\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}