{"version":3,"sources":["1g-words.js","App.js","reportWebVitals.js","index.js"],"names":["a","split","map","w","trim","initialState","step","score","word","undefined","choices","ans","high","getWord","idx","Math","floor","random","words","length","AZ","scoreBoard","className","App","props","state","window","localStorage","getItem","setItem","this","setState","prevState","uniq","letter","includes","push","char","guess","concat","setTimeout","start","replace","countdown","spell","bind","onClick","read","print","remove","giveUp","sort","yes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d038b5fc.chunk.js","sourcesContent":["const words = `\nthe,like,has,came,all,been,\ncan,go,put,gave,down,because,\nto,look,into,make,food,before,\nam,you,fast,time,good,friend,\nhave,here,back,something,house,one,\nit,see,jump,give,how,little,\nat,my,just,come,new,could,\ndo,on,off,what,night,too,\nand,going,pick,walk,now,two,\nbig,they,stop,boy,or,does,\nin,but,that,eat,our,are,\nnot,did,them,play,out,car,\nsaid,fun,then,rain,saw,girl,\nfrom,got,this,road,says,her,\nis,had,went,teach,school,there,\nget,him,when,old,brother,were,\nof,if,will,over,children,very,\nup,run,with,canâ€™t,father,where,\nfor,tell,want,don't,mother,who,\nhe,us,was,I'm,sister,why`;\n\nconst a = words.split(',').map(w => w.trim());\nexport default a;\n","import React from 'react';\nimport uniq from  'lodash/uniq';\nimport './App.css';\nimport words from './1g-words';\n\nconst initialState = {\n  step: 0,\n  score: 0,\n  word: undefined,\n  choices: [],\n  ans: '',\n  high: null,\n};\n\nconst getWord = () => {\n  const idx = Math.floor(Math.random() * words.length);\n  return words[idx];\n}\nconst AZ = 'abcdefghijklmnopqrstuvqxyz'.split('');\n\nconst scoreBoard = (score, high) => (\n  <div className=\"score\">\n    <div>Score: {score}</div>\n    {high > 0 ? <div>High: {high}</div> : null}\n  </div>\n);\n\nconst start = (state, start) => (\n  <div className=\"app go\">\n    {scoreBoard(state.score, state.high)}\n    <div>Get ready to spell!</div>\n    <div><button className=\"go\" onClick={start}>Go</button></div>\n  </div>\n);\n\nconst read = (state) => {\n  const { score, high, word, countdown } = state;\n  return (\n    <div className=\"app read\">\n      {scoreBoard(score, high)}\n      <div>{word}</div>\n      <div>{countdown}</div>\n    </div>\n  );\n};\n\nconst spell = (state, print, remove, giveUp) => {\n  const { score, high, choices, ans } = state;\n  return (\n    <div className=\"app spell\">\n      {scoreBoard(score, high)}\n      <div>&nbsp;{ans}&nbsp;</div>\n      <div>\n        {choices.sort().map(letter => (\n          <button key={letter} onClick={() => print(letter)}>{letter}</button>\n        ))}\n        <button className=\"remove\" onClick={remove}> &lt; </button>\n        <button className=\"give-up\" onClick={giveUp}> ? </button>\n      </div>\n    </div>\n  );\n};\n\nconst yes = (state) => {\n  const { score, high, ans } = state;\n  return (\n    <div className=\"app yes\">\n      {scoreBoard(score, high)}\n      <div>{ans}</div>\n      <div>Yes!!!</div>\n    </div>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const high = window.localStorage?.getItem('speling-be') || 0;\n    if (high === null) {\n      window.localStorage.setItem('speling-be', 0);\n    }\n    this.setState(prevState => ({\n      ...prevState,\n      high,\n    }));\n  }\n\n  spell() {\n    const { word } = this.state;\n    const choices = uniq(word.split(''));\n    while (choices.length < 15) {\n      const idx = Math.floor(Math.random() * 26);\n      const letter = AZ[idx];\n      if (!choices.includes(letter)) {\n        choices.push(letter);\n      }\n    }\n\n    this.setState(prevState => ({\n      ...this.state,\n      step: 2,\n      choices,\n    }));\n  }\n\n  print(char) {\n    const guess = this.state.ans.concat(char);\n    const step = guess === this.state.word ? 3 : 2;\n\n    if (step === 3) {\n      setTimeout(() => {\n        this.setState(\n          prevState => {\n            const score = prevState.score + 1;\n            const high = score > prevState.high ? score : prevState.high;\n            window.localStorage.setItem('speling-be', high);\n            return {\n              ...prevState,\n              score,\n              high,\n            };\n          },\n          () => this.start());\n      }, 2000);\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      ans: guess,\n      step,\n    }));\n  }\n\n  remove() {\n    this.setState(prevState => ({\n      ...prevState,\n      ans: this.state.ans.replace(/.$/, ''),\n    }));\n  }\n\n  giveUp() {\n    this.setState(prevState => ({\n      ...initialState,\n      score: 0,\n      high: prevState.high\n    }));\n  }\n\n  start() {\n    this.setState(prevState => ({\n      ...prevState,\n      step: 1,\n      word: getWord(),\n      ans: '',\n      countdown: 3\n    }));\n    setTimeout(() => this.setState(prevState => ({ ...prevState, countdown: 2 })), 1000);\n    setTimeout(() => this.setState(prevState => ({ ...prevState, countdown: 1 })), 2000);\n    setTimeout(() => this.spell(), 3000);\n  }\n\n  render() {\n    switch(this.state.step) {\n      case 0: return start(this.state, this.start.bind(this));\n      case 1: return read(this.state);\n      case 2: return spell(this.state, this.print.bind(this), this.remove.bind(this), this.giveUp.bind(this));\n      case 3: return yes(this.state);\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}